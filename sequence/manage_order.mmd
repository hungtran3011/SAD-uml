@startuml
title Quản lý đơn hàng (Staff)

actor "Staff" as Staff
boundary "Admin UI" as UI
participant "AuthService" as Auth
participant "OrderController" as OC
participant "OrderService" as OS
participant "OrderValidator" as OV
database "OrderDB" as DB
participant "InventoryService" as IS
participant "PaymentService" as PS
participant "NotificationService" as NS

== A. Xem danh sách đơn ==
Staff -> UI : GET /admin/orders?page=1&size=20&filters
activate UI
UI -> Auth : validateToken(JWT)
Auth --> UI : 200 OK (role=Staff)

UI -> OC : listOrders(page,size,filters)
activate OC
OC -> OS : listOrders(page,size,filters)
activate OS
OS -> DB : SELECT * FROM orders WHERE [filters]
DB --> OS : orderList
OS --> OC : orderList
deactivate OS
OC --> UI : orderList
deactivate OC
UI --> Staff : hiển thị danh sách đơn hàng

== B. Xem chi tiết đơn ==
Staff -> UI : GET /admin/orders/{orderId}
activate UI
UI -> Auth : validateToken(JWT)
Auth --> UI : 200 OK

UI -> OC : getOrderDetail(orderId)
activate OC
OC -> OS : getOrderDetail(orderId)
activate OS
OS -> DB : SELECT * FROM orders, order_items WHERE id=orderId
DB --> OS : orderDetail
OS --> OC : orderDetail
deactivate OS
OC --> UI : orderDetail
deactivate OC
UI --> Staff : hiển thị chi tiết đơn hàng

== C. Cập nhật trạng thái đơn ==
Staff -> UI : POST /admin/orders/{orderId}/status\n{newStatus}
activate UI
UI -> Auth : validateToken(JWT)
Auth --> UI : 200 OK

UI -> OC : updateStatus(orderId, newStatus)
activate OC

OC -> OV : validateStatus(orderId, newStatus)
activate OV
OV -> DB : SELECT status FROM orders WHERE id=orderId
DB --> OV : currentStatus
OV --> OC : valid/invalid
deactivate OV

alt valid status change
  OC -> OS : updateStatus(orderId, newStatus)
  activate OS
  OS -> DB : UPDATE orders SET status=newStatus WHERE id=orderId
  DB --> OS : success
  
  alt newStatus == "Shipped"
    OS -> IS : deductStock(orderId)
    IS --> OS : success
  end
  
  alt newStatus == "Cancelled"
    OS -> PS : processRefund(orderId)
    PS --> OS : success
  end
  
  OS -> NS : notifyUser(orderId, newStatus)
  NS --> OS : queued
  
  OS --> OC : success
  deactivate OS
  OC --> UI : success
else invalid status change
  OC --> UI : errorResponse(400, "Invalid status transition")
end

deactivate OC
UI --> Staff : thông báo kết quả

== D. Thêm ghi chú cho đơn hàng ==
Staff -> UI : POST /admin/orders/{orderId}/notes\n{note}
activate UI
UI -> Auth : validateToken(JWT)
Auth --> UI : 200 OK

UI -> OC : addNote(orderId, note)
activate OC
OC -> OS : addNote(orderId, note, staffId)
activate OS
OS -> DB : INSERT INTO order_notes VALUES (orderId, note, staffId)
DB --> OS : success
OS --> OC : success
deactivate OS
OC --> UI : success
deactivate OC
UI --> Staff : thông báo "Đã thêm ghi chú"

@enduml